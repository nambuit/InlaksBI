@model InlaksIB.Migration_Schedule

@using (Html.BeginForm("ProcessMigration",  "home", new { id = Model.ID, mode = "edit" }, FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Edit Migration Schedule</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Application_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Application_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Application_Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateFilter, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateFilter, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateFilter, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">

            @Html.LabelFor(model => model.MaxDate, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.ValidationMessageFor(model => model.MaxDate, "", new { @class = "text-danger" })


            <div data-name="MaxDate" data-readonly="fasle" class="col-md-6 bfh-datepicker" data-format="d-m-y" data-date="@Model.MaxDate">

            </div>

            <div class="col-md-4 bfh-timepicker"  data-name="Time" data-time="@Model.Time" data-mode="12h"></div>

        </div>



      

        <div class="form-group">
            @Html.LabelFor(model => model.Fields, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Fields, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Fields, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Interval, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-1">
                @Html.EditorFor(model => model.Interval, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Interval, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                @if (string.IsNullOrEmpty(Model.IntervalDescription)) { Model.IntervalDescription = ""; }
                <select name="IntervalDescription" class="form-control">
                    <option @(Model.IntervalDescription.Trim().Equals("D")?"selected":"") value="D">Day(s)</option>
                    <option  @(Model.IntervalDescription.Trim().Equals("W")?"selected":"")   value="W">Week(s)</option>
                    <option @(Model.IntervalDescription.Trim().Equals("M")?"selected":"") value="M">Month(s)</option>
                    <option @(Model.IntervalDescription.Trim().Equals("Y")?"selected":"") value="Y">Year(s)</option>
                </select>
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.FetchSize, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.FetchSize, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FetchSize, "", new { @class = "text-danger" })
            </div>
        </div>




        <div class="form-group">
            <label class="control-label col-md-2"> Include/Exclude Weekends</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.AllowWeekends)
                @Html.ValidationMessageFor(model => model.AllowWeekends, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
           <label class="control-label col-md-2"> Activate/Deactivate</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Status)
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
                @Html.ActionLink("Back to List", "MigrationSetup",new {  id=0, mode="list"})
            </div>
        </div>
    </div>
}


