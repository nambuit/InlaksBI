@model InlaksIB.AuthSetup

@{
    ViewBag.Title = "AuthSetup";
    Layout = "~/Views/Home/HomeLayout.cshtml";
}

<div class="col-md-9" onshow="hide(this)">

    <div class="content-box-large">
        <div class="panel-heading">
            <div class="panel-title">Authentication Setup</div>
        </div>
        <div class="panel-body">
            <div class="form-horizontal" style="width:60%">
                <div class="form-group">
                    <label class="control-label" style="color:@ViewBag.errorclass" for="RoleID">@ViewBag.message</label>
                </div>
                @using (Html.BeginForm("ProcessAuth","home"))
            {
                    @Html.AntiForgeryToken()

                    var listItems = new List<SelectListItem>();

                    var db = Model.AuthType.Equals("DATABASE"); var adsi = Model.AuthType.Equals("ADSI");

                    listItems.Add(new SelectListItem() { Selected = db, Text = "Database", Value = "DATABASE" });

                    listItems.Add(new SelectListItem() { Selected = adsi, Text = "Active Directory", Value = "ADSI" });

                    <div class="form-group">
                        @Html.LabelFor(model => model.AuthType, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.AuthType, listItems, htmlAttributes: new { @class = "form-control", @onchange = "hide(this)", @id="auth" })
                            @Html.ValidationMessageFor(model => model.AuthType, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" id="ldap" style="display:@(db?"none":"block")">
                        @Html.LabelFor(model => model.Server, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Server, new { htmlAttributes = new { @class = "form-control", @id="server"  } })
                            @Html.ValidationMessageFor(model => model.Server, "", new { @class = "text-danger" })
                        </div>
                    </div>

                   

                    @Html.HiddenFor(model => model.id)

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>


                }
                </div>

                    <div>
                        @Html.ActionLink("Back", "Index")
                    </div>

                </div>


</div>
</div>