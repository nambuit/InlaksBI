@model InlaksIB.User

@using (Html.BeginForm("ProcessUser","home", new { mode = "edit", id=Model.UserID }, FormMethod.Post))
{
    @Html.AntiForgeryToken()

    @Html.AntiForgeryToken()

    var listItems = new List<SelectListItem>();
    var leadcompanies = new List<SelectListItem>();

    var curuser = (User)Session["User"];
    var curcomp = new InlaksBIContext().Comapanies.Where(c => c.leadcompcode == curuser.LeadCompany).FirstOrDefault();
    bool isAdmin = curuser.UserRole.RoleID == 1;
    var test = curcomp.CompanyMnemonic.CleanUp();
    var roles = isAdmin ? new InlaksBIContext().Roles.Where(r => r.RoleID != 1) : new InlaksBIContext().Roles.Where(r => r.RoleName.Trim().ToLower().Contains(test));
    foreach (var role in roles)
    {
        listItems.Add(new SelectListItem { Text = role.RoleName, Value = role.RoleID.ToString() });
    }

    var companies = new InlaksBIContext().Comapanies.ToList();

    leadcompanies.Add(new SelectListItem { Text = "", Value = "null" });

    foreach (var comp in companies.GroupBy(c => c.leadcompcode).Select(c => c.ToList()))
    {
        var leadcomp = comp.FirstOrDefault(l => l.CompanyCode == comp[0].leadcompcode);
        leadcompanies.Add(new SelectListItem { Text = leadcomp.CompanyName, Value = leadcomp.leadcompcode });
    }


    <div class="form-horizontal">
        <h4>Edit User Details</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RoleID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.RoleID, listItems, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RoleID, "", new { @class = "text-danger" })
            </div>



        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.LeadCompany, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.LeadCompany, leadcompanies, htmlAttributes: new { @class = "form-control select2", @onchange = "showBranches(this)" })
                @Html.ValidationMessageFor(model => model.LeadCompany, "", new { @class = "text-danger" })
            </div>



        </div>


        <div id="branchlist" class="form-group">
            @Html.LabelFor(model => model.Branch, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                <select name="Branch" id="Branch" class="form-control select2"></select>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back", "UserSetup/create")
</div>
